package com.revature.codechallenge;
import java.util.Scanner;
public class MinimumMutations {
    
    public static void main(String[] args) {
        //setting the driver
        int ans = MinimumMutation();
        System.out.println(ans);
    }
    public static int MinimumMutation() {
        // scanner input, assuming the same number of characters for start and end
        Scanner scan = new Scanner(System.in);
        String str = "";
        System.out.print("start: ");
        str = scan.nextLine();
        String ed = "";
        System.out.print("end: ");
        ed = scan.nextLine();
        //giving the gene bank
        String[] bank = {"AACCGGTA", "AACCGCTA", "AAACGGTA"};
        System.out.println("bank: " +bank);
        // verifying the end is a proper gene in the bank, default is false
        boolean inBank = false;
        // this loop checks if the the end is in the bank
        for (int i = 0; i < bank.length; i++) {
            if (bank[i].equals(ed)) {
                //changes boolean to true
                inBank = true;
            }
        }
        // went through bank, didn't find end in bank
        if (inBank == false) {
            return -1;
            // did find end in bank, compares start and end using a counter
            // character to character because of charAt
            // if it finds a difference, added to counter
        } else {
            //using a counter to keep up with mutation number
            int count = 0;
            for (int i = 0; i < str.length(); i++) {
                //comparing the chars at indexs, if they are not equal
                if (str.charAt(i) != ed.charAt(i)) {
                    //then add to the counter
                    count++;
                }
            }
            return count;
        }
    }
}
