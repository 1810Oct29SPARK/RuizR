package com.revature.example;

import java.util.Arrays;

import com.revature.transport.Car;
import com.revature.transport.MaintenanceException;

public class GenericsAndReflection {

	public static void main(String[] args) {
		
		Car c = new Car (2300, "fury roadster", "mad max", 1000);
		Object[] emptyCars = (Car[]) replicate(c,3);
		try {
			((Car) emptyCars[2]).move();
		} catch(MaintenanceException m) {
			m.printStackTrace();
		}
		//System.out.println(Arrays.toString(emptyCars));

	}

	// fills an array of specified size with objects of the same type as passed into method
	static Object[] replicate (Object O, int size) {
		Object[] replicants = new Object[size];
		for (int i=0; i<size; i++) {
			replicants[i] = new Object();
		}
		return replicants;
	}
	
	static <T> Object[] replicateWithGenerics (T t, int size) {
		Object[] replicants = new Object[size];
		for (int i=0; i<size; i++) {
			try {
				replicants[i] = (t.getClass()).newInstance();
			} catch (InstantiationException e) {
				e.printStackTrace();
			} catch (IllegalAccessException e) {
				e.printStackTrace();
			}
		}
		return replicants;
	}
}
