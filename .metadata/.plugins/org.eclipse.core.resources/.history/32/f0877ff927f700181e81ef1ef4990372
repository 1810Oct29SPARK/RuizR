package com.revature.codechallenge;

public static int MinimumMutations {

	    //scanner input, assuming the same number of characters for start and end will give OutOfBounds if not
	    Scanner scan = new Scanner(System.input);
	    int input = 1;
	    
	    String str = "";
	    system.out.println("start: ");
	    str = scan.nextLine();
	            
	    //setting a bank
	    String[] bank = {"AACCGGTT", "AACCGGTA"};
	   
	    String ed = "";
	        System.out.print("end: ");
	            ed= scan.nextLine();
	            
	    //verifying the end is a proper gene in the bank
	    boolean inBank = false;
	            
	        //this loop checks if the the end is in the bank
	          for (int i =0; i < bank.length; i++) {
	              if (bank[i].equals(ed))
	              {
	                  inBank = true;
	              }
	          }
	          //went through bank, didn't find end in bank
	          if (inBank == false) {
	              return -1;
	              
	              //did find end in bank, compares start and end using a counter
	              //character to character because of charAt
	              //if it finds a difference, added to counter
	          } else {
	              int count = 0;
	              for (int i = 0; i <str.length(); i++) {
	                  if (str.charAt(i) != ed.charAt(i)){
	                      count++;
	                  }
	              } return count;
	              
	          }
	
	public static void main(String[] args) {
	    int ans = MinimumMutations();
	    System.out.println(ans);
	 };

}
